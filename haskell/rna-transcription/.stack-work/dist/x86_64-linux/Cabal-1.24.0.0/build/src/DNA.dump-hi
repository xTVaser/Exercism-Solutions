
==================== FINAL INTERFACE ====================
2017-01-12 01:05:33.937574 UTC

interface rna-transcription-0.0.0-A1CkE2RAnq15zftq2A6e4V:DNA 8001
  interface hash: 097548b563619e861602e722f9581bfa
  ABI hash: c1fdcf95c3d2af91c91a26cd738f5d48
  export-list hash: 69ffc487f680bf2a9f527663e225081a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  DNA.toRNA
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
05eb10561e949031ba60b28a2446acfd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module DNA.$trModule2 DNA.$trModule1) -}
548cc1c7f638aab3ee9e8f3eadc3a34d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DNA"#) -}
b4d0c775ca2fd8e88526d9d4b64def78
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "rna-transcription-0.0.0-A1CkE2RAnq15zftq2A6e4V"#) -}
1219bb288649dd6c877885f763057df5
  toRNA :: GHC.Base.String -> GHC.Base.Maybe GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> GHC.Base.Nothing @ GHC.Base.String
                   : ipv ipv1
                   -> case (DNA.toRNA_go1 wild)
                             `cast`
                           (Data.Monoid.N:First[0] <GHC.Types.Char>_N) of wild1 {
                        GHC.Base.Nothing
                        -> GHC.Base.Just @ [GHC.Types.Char] (DNA.toRNA_go wild)
                        GHC.Base.Just a2 -> GHC.Base.Nothing @ GHC.Base.String } }) -}
40bf1e725bb12002d1257132bb1156c8
  toRNA_go :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
f61c6105133f02c1ec309a96ff109436
  toRNA_go1 :: [GHC.Types.Char] -> Data.Monoid.First GHC.Types.Char
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

